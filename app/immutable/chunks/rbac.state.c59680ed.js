var C=Object.defineProperty;var I=(e,r,t)=>r in e?C(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var D=(e,r,t)=>(I(e,typeof r!="symbol"?r+"":r,t),t);import{t as R,a as M}from"./index.07c9debd.js";import{S as T}from"./scheduler.d39a3720.js";import{s as f}from"./client.3f1dd265.js";import{w as S}from"./index.42ef28c5.js";function ee(e){return(e==null?void 0:e.length)!==void 0?e:Array.from(e)}function re(e,r){R(e,1,1,()=>{r.delete(e.key)})}function te(e,r,t,a,c,s,o,p,i,w,E,F){let m=e.length,y=s.length,h=m;const A={};for(;h--;)A[e[h].key]=h;const g=[],N=new Map,j=new Map,v=[];for(h=y;h--;){const n=F(c,s,h),l=t(n);let u=o.get(l);u?a&&v.push(()=>u.p(n,r)):(u=w(l,n),u.c()),N.set(l,g[h]=u),l in A&&j.set(l,Math.abs(h-A[l]))}const G=new Set,x=new Set;function $(n){M(n,1),n.m(p,E),o.set(n.key,n),E=n.first,y--}for(;m&&y;){const n=g[y-1],l=e[m-1],u=n.key,P=l.key;n===l?(E=n.first,m--,y--):N.has(P)?!o.has(u)||G.has(u)?$(n):x.has(P)?m--:j.get(u)>j.get(P)?(x.add(u),$(n)):(G.add(P),m--):(i(l,o),m--)}for(;m--;){const n=e[m];N.has(n.key)||i(n,o)}for(;y;)$(g[y-1]);return T(v),g}var d={};(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.throwTypescriptError=e.throwError=void 0;const r=a=>{throw new Error(`[svelte-preprocess] ${a}`)};e.throwError=r;const t=()=>{(0,e.throwError)("Encountered type error")};e.throwTypescriptError=t})(d);const _=(e,r)=>{const{subscribe:t,set:a}=S(e),c=S(!0),s=async()=>{c.set(!0);const o=await r();a(o),c.set(!1)};return r().then(o=>a(o)).catch(o=>d.throwError(o)).finally(()=>{c.set(!1)}),{subscribe:t,reload:s,reset:()=>a([]),loading:c}};class b{constructor(r){D(this,"tableName");this.tableName=r}async bulkCreate(r){try{const{data:t,error:a}=await f.from(this.tableName).insert(r).select();return a?(console.error(a),Promise.reject(`Creation of ${this.tableName} records failed, please try again.`)):Promise.resolve(t)}catch(t){return console.error(t),Promise.reject(`Creation of ${this.tableName} records failed, please try again.`)}}async bulkUpdate(r,t){try{const{data:a,error:c}=await f.from(this.tableName).upsert(r,t).select();return c?(console.error(c),Promise.reject(`Creation of ${this.tableName} records failed, please try again.`)):Promise.resolve(a)}catch(a){return console.error(a),Promise.reject(`Creation of ${this.tableName} records failed, please try again.`)}}async getAll(){try{const{data:r,error:t}=await f.from(this.tableName).select();return t?(console.error(t),Promise.reject(`Fetch of ${this.tableName} records failed, please try again.`)):Promise.resolve(r)}catch(r){return console.error(r),Promise.reject(`Fetch of ${this.tableName} records failed, please try again.`)}}async bulkDelete(r){try{const{error:t}=await f.from(this.tableName).delete().in("id",r);return t?(console.error(t),Promise.reject(`Deletion of ${this.tableName} record failed, please try again.`)):Promise.resolve()}catch(t){return console.error(t),Promise.reject(`Deletion of ${this.tableName} record failed, please try again.`)}}}class W extends b{constructor(){super("users")}}const k=new W;class O extends b{constructor(){super("permission_groups")}}const U=new O;class B extends b{constructor(){super("permissions")}async getAllWithGroupDetails(){try{const{data:r,error:t}=await f.from(this.tableName).select(`
					id, 
					description, 
					sort_index, 
					uuid, 
					created_at, 
					created_by_id, 
					updated_at, 
					updated_by_id, 
					permission_groups(id, name)
				`).order("sort_index",{ascending:!0});if(t)return console.error(t),Promise.reject(`Fetch of ${this.tableName} records failed, please try again.`);const a=r.map(c=>{var o,p;const s=c;return{id:s.id,description:s.description,sort_index:s.sort_index,group_id:(o=s.permission_groups)==null?void 0:o.id,group_name:(p=s.permission_groups)==null?void 0:p.name,uuid:s.uuid,created_by_id:s.created_by_id,created_at:s.created_at,updated_by_id:s.updated_by_id,updated_at:s.updated_at}});return Promise.resolve(a)}catch(r){return console.error(r),Promise.reject(`Fetch of ${this.tableName} records failed, please try again.`)}}}const H=new B;class q extends b{constructor(){super("roles")}async getAllWithGroupDetails(){try{const{data:r,error:t}=await f.from(this.tableName).select(`
					id, 
					name, 
					sort_index, 
					uuid, 
					created_at, 
					created_by_id, 
					updated_at, 
					updated_by_id, 
					role_groups(id, name)
				`).order("sort_index",{ascending:!0});if(t)return console.error(t),Promise.reject(`Fetch of ${this.tableName} records failed, please try again.`);const a=r.map(c=>{var o,p;const s=c;return{id:s.id,name:s.name,sort_index:s.sort_index,group_id:(o=s.role_groups)==null?void 0:o.id,group_name:(p=s.role_groups)==null?void 0:p.name,uuid:s.uuid,created_by_id:s.created_by_id,created_at:s.created_at,updated_by_id:s.updated_by_id,updated_at:s.updated_at}});return Promise.resolve(a)}catch(r){return console.error(r),Promise.reject(`Fetch of ${this.tableName} records failed, please try again.`)}}}const z=new q;class J extends b{constructor(){super("role_groups")}}const K=new J,L=()=>{const e="Failed to fetch data, please refresh browser and try again",r=_([],async()=>{try{return await k.getAll()}catch{return d.throwError(e)}}),t=_([],async()=>{try{return await U.getAll()}catch{return d.throwError(e)}}),a=_([],async()=>{try{return H.getAllWithGroupDetails()}catch{return d.throwError(e)}}),c=_([],async()=>{try{return await K.getAll()}catch{return d.throwError(e)}}),s=_([],async()=>{try{return z.getAllWithGroupDetails()}catch{return d.throwError(e)}}),o=_([],async()=>{try{const{data:i,error:w}=await f.from("role_permissions").select("*");return w?d.throwError(e):i}catch{return d.throwError(e)}}),p=_([],async()=>{try{const{data:i,error:w}=await f.from("user_roles").select("*");return w?d.throwError(e):i}catch{return d.throwError(e)}});return{store:{users:r,permissionGroups:t,permissions:a,roleGroups:c,roles:s,rolePermissions:o,userRoles:p}}},se=L();export{z as a,K as b,k as c,ee as e,re as o,H as p,se as r,te as u};
